# 바퀴 odom과 scan data를 유동적으로 매칭하는 것이 필요 -> 장애물 만났을 떄 회전하면 휠오돔 비중 올리기
# 휠 엔코더의 현재값, 직전 값을 비교하여 얼마나 회전했는지 판단  가능
# 휠과 zed 값의 가중치를 둬서 판단하기

amcl:
  ros__parameters:
    use_sim_time: False
    alpha1: 0.001 #기존 0.2 -> 0.01
    alpha2: 0.001    # 0.05
    alpha3: 0.001      # 0.05
    alpha4: 0.001      # 0.01
    alpha5: 0.0
    base_frame_id: "base_link"          #base_link   
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: true              # 기본값 false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0     # 2.0
    laser_max_range: 100.0                   
    laser_min_range: -1.0                       
    laser_model_type: "likelihood_field"     
    max_beams: 60
    max_particles: 2000        
    min_particles: 500       
    odom_frame_id: "odom"
    pf_err: 0.02 # 기존 0.05  -> 0.02
    pf_z: 0.99      # 0.99
    recovery_alpha_fast: 0.1
    recovery_alpha_slow: 0.001
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.2 # 기존 0.5
    sigma_hit: 0.2    # 0.2 
    tf_broadcast: true
    transform_tolerance: 1.5
    update_min_a: 0.01 #기존 0.2
    update_min_d: 0.01
    z_hit: 0.2 #기존 0.5 -> 0.8
    z_max: 0.02 #기존 0.05 -> 0.08
    z_rand: 0.5
    z_short: 0.05
    scan_topic: /scan      # /scan

amcl_map_client:
  ros__parameters:
    use_sim_time: False

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: False

bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_drive_on_heading_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    # - nav2_goal_updated_controller_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_wait_cancel_bt_node
    - nav2_spin_cancel_bt_node
    - nav2_back_up_cancel_bt_node
    - nav2_drive_on_heading_cancel_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: False

#######################################################################################################

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 5.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    controller_plugins: ["FollowPath"]
    ##################################################
    # failure_tolerance: 0.2
    ###########################################
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] 
    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 1.0
      movement_time_allowance: 20.0
    
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.3        # 0.25
      yaw_goal_tolerance: 0.3        # 0.25
#################################################################
    FollowPath:
      plugin: "nav2_rotation_shim_controller::RotationShimController"
      primary_controller: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      angular_dist_threshold: 0.785
      forward_sampling_distance: 1.5       # 0.5
      rotate_to_heading_angular_vel: 0.45    # 1.0 -> 0.7 -> 0.45
      max_angular_accel: 0.7                # 1.0  -> 0.7 
      simulate_ahead_time: 1.0
      rotate_to_goal_heading: true
      
      ######## primary controller param #########
      desired_linear_vel: 0.3
      lookahead_dist: 0.6
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      lookahead_time: 2.0                     # 1.5                        
      rotate_to_heading_angular_vel: 0.45                # 1.5 -> 0.7
      transform_tolerance: 1.5
      use_velocity_scaled_lookahead_dist: false             # 원래 false 였음
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.6
      use_collision_detection: true            # 원래 true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: true
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.25
      use_cost_regulated_linear_velocity_scaling: true    # 장애물과 가까워지면 속도 늦춤
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.25
      use_rotate_to_heading: true                         # 제자리 회전 가능 여부
      allow_reversing: false
      rotate_to_heading_min_angle: 0.785
      max_angular_accel: 2.0                              # 3.2 
      max_robot_pose_search_dist: 10.0

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 10.0                 # 5.0
      publish_frequency: 10.0                # 2.0
      global_frame: odom
      robot_base_frame: base_link          #base_link
      use_sim_time: False
      rolling_window: true
      width: 4                             # 15
      height: 4                            # 15
      resolution: 0.05
      robot_radius: 0.1         
      plugins: ["voxel_layer", "inflation_layer"]
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.58          # 2.58 -> 1.75
        inflation_radius: 1.75            # 1.75 -> 1.25

      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: False
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 10.0            # 1.0
      publish_frequency: 10.0           # 1.0
      global_frame: map
      robot_base_frame: base_link           # base_link
      use_sim_time: False
      robot_radius: 0.1
      resolution: 0.05
      track_unknown_space: true           # true
      # plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      plugins: ["static_layer", "inflation_layer"]
      ## UNCOMMENT HERE FOR KEEPOUT DEMO
      # filters: ["keepout_filter"]
      # obstacle_layer:
      #   plugin: "nav2_costmap_2d::ObstacleLayer"
      #   enabled: True
      #   observation_sources: scan
      #   scan:
      #     topic: /scan
      #     max_obstacle_height: 2.0
      #     clearing: True
      #     marking: True                 # True
      #     data_type: "LaserScan"
      #     raytrace_max_range: 1.5      # 10.0
      #     raytrace_min_range: -1.0
      #     obstacle_max_range: 1.5       # 2.5
      #     obstacle_min_range: -1.0  
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.58          # 2.58 -> 1.75
        inflation_radius: 1.75           # 1.75 -> 0.75
      always_send_full_costmap: True
      ## UNCOMMENT HERE FOR KEEPOUT DEMO
      # keepout_filter:
      #   plugin: "nav2_costmap_2d::KeepoutFilter"
      #   enabled: True
      #   filter_info_topic: "/costmap_filter_info"
  global_costmap_client:
    ros__parameters:
      use_sim_time: False
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

#######################################################################################################
# controller_server:
#   ros__parameters:
#     use_sim_time: False
#     controller_frequency: 20.0
#     min_x_velocity_threshold: 0.001
#     min_y_velocity_threshold: 0.5
#     min_theta_velocity_threshold: 0.001
#     failure_tolerance: 0.3
#     progress_checker_plugin: "progress_checker"
#     goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
#     controller_plugins: ["FollowPath"]

#     # Progress checker parameters
#     progress_checker:
#       plugin: "nav2_controller::SimpleProgressChecker"
#       required_movement_radius: 0.5
#       movement_time_allowance: 10.0
#     # Goal checker parameters
#     #precise_goal_checker:
#     #  plugin: "nav2_controller::SimpleGoalChecker"
#     #  xy_goal_tolerance: 0.25
#     #  yaw_goal_tolerance: 0.25
#     #  stateful: True
#     general_goal_checker:
#       stateful: True
#       plugin: "nav2_controller::SimpleGoalChecker"
#       xy_goal_tolerance: 0.25        # 0.25
#       yaw_goal_tolerance: 0.25       # 0.25
#     # DWB parameters
#     FollowPath:
#       plugin: "dwb_core::DWBLocalPlanner"
#       debug_trajectory_details: True
#       min_vel_x: 0.0
#       min_vel_y: 0.0
#       max_vel_x: 0.3             # 0.2
#       max_vel_y: 0.0
#       max_vel_theta: 0.7          # 1.0 -> 0.7 
#       min_speed_xy: 0.0
#       max_speed_xy: 0.2
#       min_speed_theta: 0.0
#       # Add high threshold velocity for turtlebot 3 issue.
#       # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
#       acc_lim_x: 2.0
#       acc_lim_y: 0.0
#       acc_lim_theta: 2.0           # 1.6
#       decel_lim_x: -2.0
#       decel_lim_y: 0.0
#       decel_lim_theta: -2.0
#       vx_samples: 20
#       vy_samples: 0
#       vtheta_samples: 40
#       sim_time: 4.0                 # path를 짜기위한 경로 시뮬레이션 시간 2.0 ~ 5.0 사이 사용   2.0
#       linear_granularity: 0.05
#       angular_granularity: 0.025
#       transform_tolerance: 0.2
#       xy_goal_tolerance: 0.05
#       trans_stopped_velocity: 0.25
#       short_circuit_trajectory_evaluation: True
#       stateful: True
#       critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
#       BaseObstacle.scale: 0.02
#       PathAlign.scale: 32.0
#       PathAlign.forward_point_distance: 0.1
#       GoalAlign.scale: 24.0
#       GoalAlign.forward_point_distance: 0.1
#       PathDist.scale: 32.0
#       GoalDist.scale: 24.0
#       RotateToGoal.scale: 32.0
#       RotateToGoal.slowing_factor: 5.0
#       RotateToGoal.lookahead_time: -1.0

# controller_server_rclcpp_node:
#   ros__parameters:
#     use_sim_time: False

########################################################################################################
# local_costmap:
#   local_costmap:
#     ros__parameters:
#       update_frequency: 0.5
#       publish_frequency: 0.5
#       global_frame: odom
#       robot_base_frame: base_link
#       rolling_window: true
#       use_sim_time: false
#       width: 10
#       height: 10
#       resolution: 0.1
#       transform_tolerance: 0.3
#       mark_threshold: 2
#       robot_radius: 0.4
#       always_send_full_costmap: True
#       plugins: ["nvblox_layer", "inflation_layer"]  
#       nvblox_layer:
#         plugin: "nvblox::nav2::NvbloxCostmapLayer"
#         enabled: True
#         nav2_costmap_global_frame: odom # must match with global_frame of local_costmap
#         nvblox_map_slice_topic: "/nvblox_node/static_map_slice"
#         convert_to_binary_costmap: false
#       inflation_layer:
#         plugin: "nav2_costmap_2d::InflationLayer"
#         enabled: True
#         cost_scaling_factor: 1.5
#         inflation_radius: 0.5

# global_costmap:
#   global_costmap:
#     ros__parameters:
#       update_frequency: 0.5
#       publish_frequency: 0.5
#       global_frame: map
#       robot_base_frame: base_link
#       use_sim_time: False
#       resolution: 0.1
#       # The following is only used as a default when no map is specified.
#       width: 200
#       height: 200
#       origin_x: -100.0
#       origin_y: -100.0
#       track_unknown_space: False
#       mark_threshold: 2
#       robot_radius: 0.4             # 기존 0.4 
#       always_send_full_costmap: False
#       plugins: ["static_map_layer", "nvblox_layer", "inflation_layer"]
#       static_map_layer:
#         plugin: "nav2_costmap_2d::StaticLayer"
#         map_subscribe_transient_local: True
#         enabled: true
#       nvblox_layer:
#         plugin: "nvblox::nav2::NvbloxCostmapLayer"
#         enabled: True
#         nav2_costmap_global_frame: map # must match with global_frame of global_costmap
#         nvblox_map_slice_topic: "/nvblox_node/static_map_slice"
#         convert_to_binary_costmap: True
#       inflation_layer:
#         plugin: "nav2_costmap_2d::InflationLayer"
#         enabled: True
#         cost_scaling_factor: 1.5
#         inflation_radius: 0.5
############################################################################################################

## UNCOMMENT HERE FOR KEEPOUT DEMO
costmap_filter_info_server:
  ros__parameters:
    use_sim_time: false
    type: 0
    filter_info_topic: "/costmap_filter_info"
    mask_topic: "/keepout_filter_mask"
    base: 0.0
    multiplier: 1.0

filter_mask_server:
  ros__parameters:
    use_sim_time: false
    frame_id: "map"
    topic_name: "/keepout_filter_mask"
    yaml_filename: "/home/aimy/roboworld_ws/src/aimy_main/2_navigation/isaac_ros_nvblox/map/robo_map_filtered.yaml"

map_server:
  ros__parameters:
    use_sim_time: False
    yaml_filename: "turtlebot3_world.yaml"

map_saver:
  ros__parameters:
    use_sim_time: False
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

smoother_server:
  ros__parameters:
    use_sim_time: True
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    global_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.1
    use_sim_time: False
    simulate_ahead_time: 2.0
    max_rotational_vel: 0.3
    min_rotational_vel: 0.05
    rotational_acc_lim: 0.3

robot_state_publisher:
  ros__parameters:
    use_sim_time: False

waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 0